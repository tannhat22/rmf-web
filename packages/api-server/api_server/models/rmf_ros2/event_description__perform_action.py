# generated by datamodel-codegen:
#   filename:  event_description__perform_action.json

from __future__ import annotations

from typing import Any, Optional

from pydantic import BaseModel, Field

from . import place


class PerformactionEventDescription(BaseModel):
    category: str = Field(
        ...,
        description="A string that describes the nature of this action. It should match that passed into FleetUpdateHandle::add_performable_action()",
    )
    description: Any = Field(
        ...,
        description="Additional information that will be passed along to the action executor.",
    )
    unix_millis_action_duration_estimate: Optional[int] = Field(
        default=None, description="(Recommended) The estimated duration for this action"
    )
    use_tool_sink: Optional[bool] = Field(
        default=None,
        description="(Optional) Whether the tool on the robot will be powered during the action. Default to false",
    )
    expected_finish_location: Optional[place.PlaceDescription] = Field(
        default=None,
        description="(Optional) A place that the robot will end up after the action. Default to last known location",
    )
